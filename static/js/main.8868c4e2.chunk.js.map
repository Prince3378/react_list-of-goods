{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isList","isRevers","sortBy","show","setState","reverse","sortByAbc","sortByLength","reset","this","copyGoods","sort","good1","good2","length","localeCompare","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,QAAQ,EACRC,UAAU,EACVC,OAAQ,I,EAGVC,KAAO,WACL,EAAKC,SAAS,CAAEJ,QAAQ,K,EAG1BK,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,UAAWH,EAAMG,c,EAIrBK,UAAY,WACV,EAAKF,SAAS,CAAEF,OAAQ,S,EAG1BK,aAAe,WACb,EAAKH,SAAS,CAAEF,OAAQ,Y,EAG1BM,MAAQ,WACN,EAAKJ,SAAS,CAAEH,UAAU,EAAOC,OAAQ,M,4CAG3C,WACE,MAEIO,KAAKX,MADPC,EADF,EACEA,MAAOE,EADT,EACSA,SAAUC,EADnB,EACmBA,OAAQF,EAD3B,EAC2BA,OAGrBU,EAAS,YAAOX,GAkBtB,OAhBAW,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQX,GACN,IAAK,SACH,OAAOU,EAAME,OAASD,EAAMC,OAC9B,IAAK,MACH,OAAOF,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAITZ,GACFS,EAAUL,UAIV,sBAAKW,UAAU,MAAf,UACE,uCACChB,GACC,wBACEgB,UAAU,MACVC,KAAK,SACLC,QAAST,KAAKN,KAHhB,oBAQAH,GACA,gCACE,oBAAIgB,UAAU,OAAd,SACGN,EAAUS,KAAI,SAAAC,GAAI,OACjB,oBACEJ,UAAU,aADZ,SAIGI,GAFIA,QAMX,wBACEJ,UAAU,MACVC,KAAK,SACLC,QAAST,KAAKJ,QAHhB,qBAOA,wBACEW,UAAU,MACVC,KAAK,SACLC,QAAST,KAAKH,UAHhB,iCAOA,wBACEU,UAAU,MACVC,KAAK,SACLC,QAAST,KAAKF,aAHhB,4BAOA,wBACES,UAAU,MACVC,KAAK,SACLC,QAAST,KAAKD,MAHhB,6B,GAlGMa,IAAMC,WAgHTzB,ICpIf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8868c4e2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isList: boolean,\n  isRevers: boolean,\n  sortBy: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isList: true,\n    isRevers: false,\n    sortBy: '',\n  };\n\n  show = () => {\n    this.setState({ isList: false });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isRevers: !state.isRevers,\n    }));\n  };\n\n  sortByAbc = () => {\n    this.setState({ sortBy: 'abc' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'Length' });\n  };\n\n  reset = () => {\n    this.setState({ isRevers: false, sortBy: '' });\n  };\n\n  render() {\n    const {\n      goods, isRevers, sortBy, isList,\n    } = this.state;\n\n    const copyGoods = [...goods];\n\n    copyGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'Length':\n          return good1.length - good2.length;\n        case 'abc':\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isRevers) {\n      copyGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isList && (\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={this.show}\n          >\n            Start\n          </button>\n        )}\n        {!isList && (\n          <div>\n            <ul className=\"list\">\n              {copyGoods.map(good => (\n                <li\n                  className=\"list__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.sortByAbc}\n            >\n              Sort alphabetically\n            </button>\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.sortByLength}\n            >\n              Sort by length\n            </button>\n            <button\n              className=\"btn\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}